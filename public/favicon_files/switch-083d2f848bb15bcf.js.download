(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32421],{248369:function(e,t,o){var i={"./switch.json":155109};function n(e){return o(s(e))}function s(e){if(!o.o(i,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}n.keys=function(){return Object.keys(i)},n.resolve=s,e.exports=n,n.id=248369},873994:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return c}}),o(470079);var i=o(51176),n=o(865282),s=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'default\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"disableRipple":{"type":{"name":"bool"},"default":"false"},"edge":{"type":{"name":"enum","description":"\'end\'<br>&#124;&nbsp;\'start\'<br>&#124;&nbsp;false"},"default":"false"},"icon":{"type":{"name":"node"}},"id":{"type":{"name":"string"}},"inputProps":{"type":{"name":"object"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"required":{"type":{"name":"bool"},"default":"false"},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}}},"name":"Switch","imports":["import Switch from \'@mui/material/Switch\';","import { Switch } from \'@mui/material\';"],"classes":[{"key":"checked","className":"Mui-checked","description":"State class applied to the internal `SwitchBase` component\'s `checked` class.","isGlobal":true},{"key":"colorPrimary","className":"MuiSwitch-colorPrimary","description":"Styles applied to the internal SwitchBase component\'s root element if `color=\\"primary\\"`.","isGlobal":false},{"key":"colorSecondary","className":"MuiSwitch-colorSecondary","description":"Styles applied to the internal SwitchBase component\'s root element if `color=\\"secondary\\"`.","isGlobal":false},{"key":"disabled","className":"Mui-disabled","description":"State class applied to the internal SwitchBase component\'s disabled class.","isGlobal":true},{"key":"edgeEnd","className":"MuiSwitch-edgeEnd","description":"Styles applied to the root element if `edge=\\"end\\"`.","isGlobal":false},{"key":"edgeStart","className":"MuiSwitch-edgeStart","description":"Styles applied to the root element if `edge=\\"start\\"`.","isGlobal":false},{"key":"input","className":"MuiSwitch-input","description":"Styles applied to the internal SwitchBase component\'s input element.","isGlobal":false},{"key":"root","className":"MuiSwitch-root","description":"Styles applied to the root element.","isGlobal":false},{"key":"sizeMedium","className":"MuiSwitch-sizeMedium","description":"Styles applied to the root element if `size=\\"medium\\"`.","isGlobal":false},{"key":"sizeSmall","className":"MuiSwitch-sizeSmall","description":"Styles applied to the root element if `size=\\"small\\"`.","isGlobal":false},{"key":"switchBase","className":"MuiSwitch-switchBase","description":"Styles applied to the internal `SwitchBase` component\'s `root` class.","isGlobal":false},{"key":"thumb","className":"MuiSwitch-thumb","description":"Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop.","isGlobal":false},{"key":"track","className":"MuiSwitch-track","description":"Styles applied to the track element.","isGlobal":false}],"spread":false,"themeDefaultProps":false,"muiName":"MuiSwitch","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Switch/Switch.js","inheritance":{"component":"IconButton","pathname":"/material-ui/api/icon-button/"},"demos":"<ul><li><a href=\\"/material-ui/react-switch/\\">Switch</a></li>\\n<li><a href=\\"/material-ui/react-transfer-list/\\">Transfer List</a></li></ul>","cssComponent":false}'),a=o(735250);function c(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(i.Z,{descriptions:t,pageContent:o})}c.getInitialProps=function(){var e=o(248369);return{descriptions:(0,n.Z)(e),pageContent:s}}},908998:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/switch",function(){return o(873994)}])},155109:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"checkedIcon":{"description":"The icon to display when the component is checked."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableRipple":{"description":"If <code>true</code>, the ripple effect is disabled."},"edge":{"description":"If given, uses a negative margin to counteract the padding on one side (this is often helpful for aligning the left or right side of the icon with content above or below, without ruining the border size and shape)."},"icon":{"description":"The icon to display when the component is unchecked."},"id":{"description":"The id of the <code>input</code> element."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component. <code>small</code> is equivalent to the dense switch styling."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."}},"classDescriptions":{"checked":{"description":"State class applied to {{nodeName}}.","nodeName":"the internal <code>SwitchBase</code> component&#39;s <code>checked</code> class"},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the internal SwitchBase component&#39;s root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the internal SwitchBase component&#39;s root element","conditions":"<code>color=\\"secondary\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}}.","nodeName":"the internal SwitchBase component&#39;s disabled class"},"edgeEnd":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>edge=\\"end\\"</code>"},"edgeStart":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>edge=\\"start\\"</code>"},"input":{"description":"Styles applied to {{nodeName}}.","nodeName":"the internal SwitchBase component&#39;s input element"},"root":{"description":"Styles applied to the root element."},"sizeMedium":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"medium\\"</code>"},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"},"switchBase":{"description":"Styles applied to {{nodeName}}.","nodeName":"the internal <code>SwitchBase</code> component&#39;s <code>root</code> class"},"thumb":{"description":"Styles used to create the thumb passed to the internal <code>SwitchBase</code> component <code>icon</code> prop."},"track":{"description":"Styles applied to {{nodeName}}.","nodeName":"the track element"}}}')}},function(e){e.O(0,[49774,72944,42608,97146,86291,76046,17376,17103,27762,5402,28681,87253,14090,5447,15337,17615,24993,62172,2464,84158,86520,15438,51176,28348,92888,40179],function(){return e(e.s=908998)}),_N_E=e.O()}]);