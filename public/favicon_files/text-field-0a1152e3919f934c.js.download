(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[50678],{685009:function(e,t,o){var n={"./text-field.json":724128};function i(e){return o(r(e))}function r(e){if(!o.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=r,e.exports=i,i.id=685009},603294:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return s}}),o(470079);var n=o(51176),i=o(865282),r=JSON.parse('{"props":{"autoComplete":{"type":{"name":"string"}},"autoFocus":{"type":{"name":"bool"},"default":"false"},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"defaultValue":{"type":{"name":"any"}},"disabled":{"type":{"name":"bool"},"default":"false"},"error":{"type":{"name":"bool"},"default":"false"},"FormHelperTextProps":{"type":{"name":"object"}},"fullWidth":{"type":{"name":"bool"},"default":"false"},"helperText":{"type":{"name":"node"}},"id":{"type":{"name":"string"}},"InputLabelProps":{"type":{"name":"object"}},"inputProps":{"type":{"name":"object"}},"InputProps":{"type":{"name":"object"}},"inputRef":{"type":{"name":"custom","description":"ref"}},"label":{"type":{"name":"node"}},"margin":{"type":{"name":"enum","description":"\'dense\'<br>&#124;&nbsp;\'none\'<br>&#124;&nbsp;\'normal\'"},"default":"\'none\'"},"maxRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"minRows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"multiline":{"type":{"name":"bool"},"default":"false"},"name":{"type":{"name":"string"}},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: object) => void","describedArgs":["event"]}},"placeholder":{"type":{"name":"string"}},"required":{"type":{"name":"bool"},"default":"false"},"rows":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"}},"select":{"type":{"name":"bool"},"default":"false"},"SelectProps":{"type":{"name":"object"}},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"type":{"type":{"name":"string"}},"value":{"type":{"name":"any"}},"variant":{"type":{"name":"enum","description":"\'filled\'<br>&#124;&nbsp;\'outlined\'<br>&#124;&nbsp;\'standard\'"},"default":"\'outlined\'"}},"name":"TextField","imports":["import TextField from \'@mui/material/TextField\';","import { TextField } from \'@mui/material\';"],"classes":[{"key":"root","className":"MuiTextField-root","description":"Styles applied to the root element.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"MuiTextField","forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/TextField/TextField.js","inheritance":{"component":"FormControl","pathname":"/material-ui/api/form-control/"},"demos":"<ul><li><a href=\\"/material-ui/react-autocomplete/\\">Autocomplete</a></li>\\n<li><a href=\\"/material-ui/react-text-field/\\">Text Field</a></li></ul>","cssComponent":false}'),a=o(735250);function s(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:t,pageContent:o})}s.getInitialProps=function(){var e=o(685009);return{descriptions:(0,i.Z)(e),pageContent:r}}},30092:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/text-field",function(){return o(603294)}])},724128:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"The `TextField` is a convenience wrapper for the most common cases (80%).\\nIt cannot be all things to all people, otherwise the API would grow out of control.\\n\\n## Advanced Configuration\\n\\nIt\'s important to understand that the text field is a simple abstraction\\non top of the following components:\\n\\n- [FormControl](/material-ui/api/form-control/)\\n- [InputLabel](/material-ui/api/input-label/)\\n- [FilledInput](/material-ui/api/filled-input/)\\n- [OutlinedInput](/material-ui/api/outlined-input/)\\n- [Input](/material-ui/api/input/)\\n- [FormHelperText](/material-ui/api/form-helper-text/)\\n\\nIf you wish to alter the props applied to the `input` element, you can do so as follows:\\n\\n```jsx\\nconst inputProps = {\\n  step: 300,\\n};\\n\\nreturn <TextField id=\\"time\\" type=\\"time\\" inputProps={inputProps} />;\\n```\\n\\nFor advanced cases, please look at the source of TextField by clicking on the\\n\\"Edit this page\\" button above. Consider either:\\n\\n- using the upper case props for passing values directly to the components\\n- using the underlying components directly as shown in the demos","propDescriptions":{"autoComplete":{"description":"This prop helps users to fill forms faster, especially on mobile devices. The name can be confusing, as it&#39;s more like an autofill. You can learn more about it <a href=\\"https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\\">following the specification</a>."},"autoFocus":{"description":"If <code>true</code>, the <code>input</code> element is focused during the first mount."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"defaultValue":{"description":"The default value. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"error":{"description":"If <code>true</code>, the label is displayed in an error state."},"FormHelperTextProps":{"description":"Props applied to the <a href=\\"/material-ui/api/form-helper-text/\\"><code>FormHelperText</code></a> element."},"fullWidth":{"description":"If <code>true</code>, the input will take up the full width of its container."},"helperText":{"description":"The helper text content."},"id":{"description":"The id of the <code>input</code> element. Use this prop to make <code>label</code> and <code>helperText</code> accessible for screen readers."},"InputLabelProps":{"description":"Props applied to the <a href=\\"/material-ui/api/input-label/\\"><code>InputLabel</code></a> element. Pointer events like <code>onClick</code> are enabled if and only if <code>shrink</code> is <code>true</code>."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element."},"InputProps":{"description":"Props applied to the Input element. It will be a <a href=\\"/material-ui/api/filled-input/\\"><code>FilledInput</code></a>, <a href=\\"/material-ui/api/outlined-input/\\"><code>OutlinedInput</code></a> or <a href=\\"/material-ui/api/input/\\"><code>Input</code></a> component depending on the <code>variant</code> prop value."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"label":{"description":"The label content."},"margin":{"description":"If <code>dense</code> or <code>normal</code>, will adjust vertical spacing of this and contained components."},"maxRows":{"description":"Maximum number of rows to display when multiline option is set to true."},"minRows":{"description":"Minimum number of rows to display when multiline option is set to true."},"multiline":{"description":"If <code>true</code>, a <code>textarea</code> element is rendered instead of an input."},"name":{"description":"Name attribute of the <code>input</code> element."},"onChange":{"description":"Callback fired when the value is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string)."}},"placeholder":{"description":"The short hint displayed in the <code>input</code> before the user enters a value."},"required":{"description":"If <code>true</code>, the label is displayed as required and the <code>input</code> element is required."},"rows":{"description":"Number of rows to display when multiline option is set to true."},"select":{"description":"Render a <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element while passing the Input element to <code>Select</code> as <code>input</code> parameter. If this option is set you must pass the options of the select as children."},"SelectProps":{"description":"Props applied to the <a href=\\"/material-ui/api/select/\\"><code>Select</code></a> element."},"size":{"description":"The size of the component."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"type":{"description":"Type of the <code>input</code> element. It should be <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\">a valid HTML5 input type</a>."},"value":{"description":"The value of the <code>input</code> element, required for a controlled component."},"variant":{"description":"The variant to use."}},"classDescriptions":{"root":{"description":"Styles applied to the root element."}}}')}},function(e){e.O(0,[49774,72944,42608,97146,86291,76046,17376,17103,27762,5402,28681,87253,14090,5447,15337,17615,24993,62172,2464,84158,86520,15438,51176,28348,92888,40179],function(){return e(e.s=30092)}),_N_E=e.O()}]);